/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.tantech.cards.dbimport;

import com.opencsv.bean.CsvToBeanBuilder;
import com.tantech.cards.db.Card;
import com.tantech.cards.db.CardRepository;
import com.tantech.cards.db.MTGSet;
import com.tantech.cards.db.MTGSetRepository;
import com.tantech.cards.db.OwnedCard;
import com.tantech.cards.db.OwnedCardRepository;
import static com.tantech.cards.dbimport.GetAllCards.getAllCards;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class DbImportService {
    
    @Autowired // This means to get the bean called cardRepository
               // Which is auto-generated by Spring, we will use it to handle the data
    private CardRepository cardRepository;
    @Autowired
    private MTGSetRepository setRepository;
    @Autowired
    private OwnedCardRepository ownedRepository;
    
    
    public String importOwnedCsv (String csvFile) throws FileNotFoundException, IOException{
        
        List<OwnedWrapper> cardBeans = new CsvToBeanBuilder(new FileReader(csvFile)).withType(OwnedWrapper.class).build().parse();
        
        Integer i = 1;
        for(OwnedWrapper importCard:cardBeans){
////            System.out.println("Name: "+ownedCard.getCardMaster().getName());
//            System.out.println("Condition: "+ownedCard.getCardCondition());
//            System.out.println("Price Paid: "+ownedCard.getPricePaid());
//            ownedRepository.save(ownedCard);
            
            OwnedCard myCard = new OwnedCard();
//            \(([^\)]+)\)
            String newSetCode = importCard.getSetCode();
            System.out.println(i++ + ":" + importCard.getName() + "-" + newSetCode);
            Card newCardMaster = cardRepository.findByNameAndSetCode(importCard.getName(), importCard.getSetCode());
            myCard.setSetName(setRepository.findByCode(newSetCode));
            myCard.setCardMaster(newCardMaster);
//            myCard.setCardMaster(cardRepository.findByNameAndMtgSet(importCard.getName(), 
//                   myCard.getSetName()));
            myCard.setCardCondition(importCard.getCardCondition());
            myCard.setFoil(importCard.getPrinting().equalsIgnoreCase("foil"));
            myCard.setPricePaid(importCard.getPricePaid());
            ownedRepository.save(myCard);
        }
        return "Success";
    }
    
    public void importDb() throws IOException{
        
        getAllCards(setRepository, cardRepository);
//            List<CardWrapper> allCardWrappers = getAllCards();
//            Integer i=1;
//            for (CardWrapper newCards:allCardWrappers){
//                for (Card importCard:newCards.getCards()){
//                    System.out.println(i++);
//
//                    MTGSet setRead = setRepository.findByName(importCard.getSetName());
//
//                    if ( setRead == null){
//                        setRead = new MTGSet();
//                        setRead.setName(importCard.getSetName());
//                        setRead.setCode(importCard.getSetShortName());
//                        setRepository.save(setRead);
//                        importCard.setMtgSet(setRead);
//                        cardRepository.save(importCard);
//    //                    returnStr = "Set and Card added";
//                    } else if (cardRepository.findByNameAndMtgSet(importCard.getName(), setRead) == null){
//                        importCard.setMtgSet(setRead);
//                        cardRepository.save(importCard);   
//    //                    returnStr += "Card added";
//                    }   
//                }
//            }
        }
    
}
